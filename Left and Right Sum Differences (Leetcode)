Given a 0-indexed integer array nums, find a 0-indexed integer array answer where:

answer.length == nums.length.
answer[i] = |leftSum[i] - rightSum[i]|.
Where:

leftSum[i] is the sum of elements to the left of the index i in the array nums. If there is no such element, leftSum[i] = 0.
rightSum[i] is the sum of elements to the right of the index i in the array nums. If there is no such element, rightSum[i] = 0.
Return the array answer.

class Solution {
public:
    vector<int> leftRightDifference(vector<int>& nums) {
          int n= nums.size();
        vector<int> ans(n,0), right(n,0); 
        int rsum=0;
        for (int i= n-2; i>=0; i--)right[i]= right[i+1]+ nums[i+1];
        for (int i=0; i<n; i++){
            ans[i]= abs(right[i]-rsum);
            rsum+= nums[i];
        }
        return ans;
    }
};
